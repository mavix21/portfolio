---
import DateTimeDisplay from "@/components/DateTimeDisplay.astro";
import BaseHead from "../components/BaseHead.astro";
import {
  getLangFromUrl,
  getLocalizedPathname,
  getLocalizedPathnames,
} from "../i18n/utils";
import { Menu, X } from "lucide-react";
import Navigation from "@/components/Navigation.astro";
import { ThemeSwitcher } from "@/components/ThemeSwitcher";
import LanguageSwitcher from "@/components/LanguageSwitcher";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const pathnames = getLocalizedPathnames(Astro.url.pathname);
---

<script is:inline>
  // Theme management that works with Astro view transitions
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  // Apply theme immediately to prevent flash
  const applyTheme = () => {
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  };

  // Apply theme on initial load
  applyTheme();

  // Handle view transitions - reapply theme when DOM is replaced
  if (typeof document !== "undefined") {
    // Listen for view transition events
    document.addEventListener("astro:page-load", applyTheme);
    document.addEventListener("astro:after-swap", applyTheme);

    // Also listen for navigation events that might not trigger the above
    document.addEventListener("astro:before-preparation", applyTheme);
  }

  // Set up MutationObserver to persist theme changes to localStorage
  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });

    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang={lang}>
  <BaseHead title={title} description={description} />
  <body>
    <div
      class="flex h-svh flex-col overflow-hidden bg-muted p-0 text-foreground md:p-2"
    >
      {/* CSS-only mobile menu toggle */}
      <input type="checkbox" id="mobile-menu-toggle" class="peer hidden" />

      {/* Mobile Header */}
      <header
        class="group relative h-14 border border-t-0 bg-background/95 px-4 py-2 backdrop-blur-sm md:hidden"
      >
        <div class="flex items-center justify-between">
          {/* Logo */}
          <a
            href={getLocalizedPathname("/", lang)}
            class="mt-1 font-serif text-2xl leading-none font-normal">MV</a
          >
          <label
            for="mobile-menu-toggle"
            class="relative z-10 cursor-pointer p-2 transition-colors hover:text-foreground"
            aria-label="Toggle menu"
          >
            <Menu size={24} className="group-peer-checked:hidden" />
            <X size={24} className="hidden group-peer-checked:block" />
          </label>
        </div>
      </header>

      {/* Mobile Menu Overlay */}
      <div
        class="group mobile-menu-overlay backdrop-blur-0 invisible fixed inset-0 top-14 z-10 opacity-0 transition-all duration-300 ease-in-out peer-checked:visible peer-checked:bg-background/75 peer-checked:opacity-100 peer-checked:backdrop-blur-sm"
      >
        <div
          class="flex h-full -translate-y-full transform flex-col px-6 pt-20 transition-transform duration-300 ease-in-out group-peer-checked:translate-y-0"
        >
          <div class="flex-1 overflow-y-auto">
            <div
              class="translate-y-4 opacity-0 transition-all delay-100 duration-300 ease-in-out group-peer-checked:translate-y-0 group-peer-checked:opacity-100"
            >
              <Navigation lang={lang} />
            </div>
          </div>
          <div
            class="translate-y-4 pb-8 opacity-0 transition-all delay-200 duration-300 ease-in-out group-peer-checked:translate-y-0 group-peer-checked:opacity-100"
          >
            <div class="flex flex-col gap-4">
              <ThemeSwitcher
                lang={lang}
                className="-ml-4 text-muted-foreground"
                client:load
              />
              <LanguageSwitcher
                client:load
                lang={lang}
                pathnames={pathnames}
                className="-ml-4 text-muted-foreground"
              />
            </div>
          </div>
        </div>
      </div>

      {/* Frame border */}
      <div
        class="flex h-full flex-1 overflow-y-hidden border border-t-0 bg-background md:rounded md:border"
      >
        {/* Left Sidebar */}
        <div
          class="sticky top-0 z-10 hidden h-full w-64 flex-col space-y-8 border-r p-4 md:flex"
        >
          {/* Header Section */}
          <div class="flex-shrink-0">
            <a
              href={getLocalizedPathname("/", lang)}
              class="font-serif text-2xl font-normal">MV</a
            >
            <DateTimeDisplay lang={lang} />
          </div>

          {/* Separator */}
          <div class="h-px w-full bg-border"></div>

          {/* Main Navigation - Scrollable */}
          <div
            class="scrollbar-thin scrollbar-thumb-border scrollbar-track-transparent flex-1 overflow-y-auto"
          >
            <Navigation lang={lang} />
          </div>

          {/* Footer Section */}
          <div class="flex flex-shrink-0 flex-col gap-2">
            <ThemeSwitcher
              lang={lang}
              client:load
              className="-ml-2 text-muted-foreground"
            />
            <LanguageSwitcher
              lang={lang}
              pathnames={pathnames}
              client:load
              className="-ml-2 text-muted-foreground"
            />
          </div>

          {/* Separator */}
          <!-- <div class="h-px w-full bg-border"></div> -->
        </div>

        {/* Main Content Area */}
        <div class="grid h-full flex-1 grid-rows-[1fr_auto] overflow-y-auto">
          {/* Main Content */}
          <div class="animate-fade-in-up p-4 pt-40 md:h-full md:pt-32">
            <slot />
          </div>

          {/* Footer */}
          <footer class="border-t border-border py-2 md:ml-4">
            <div class="text-center text-xs text-muted-foreground">
              Â© 2025 All rights reserved
            </div>
          </footer>
        </div>
      </div>
    </div>
  </body>
</html>
